com.bright.test.name=Bright
com.bright.test.do=Working
# use other config by ${key}
com.bright.test.desc=${com.bright.test.name} is ${com.bright.test.do}.

com.bright.test.null=

# random 可以看作是一个spring boot 内置的对象
# random String
com.bright.test.value=${random.value}
# random int
com.bright.test.number=${random.int}
# random long
com.bright.test.long=${random.long}
# random int less than 10
com.bright.test.less10=${random.int(10)}
# random int between 10 and 20
com.bright.test.10to20=${random.int[10,20]}

# Set the app port from 8080 to 8888. Then use http://localhost:8888/hello
#server.port=8888

# 多数据源链接配置
spring.datasource.primary.url=jdbc:sqlserver://SQLDEVAW01.dev.activenetwork.com:1433;databaseName=ledger_service
spring.datasource.primary.username=fnd_dev_usr
spring.datasource.primary.password=fnd_dev_usr$2008
spring.datasource.primary.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver

spring.datasource.secondary.url=jdbc:sqlserver://SQLDEVAW01.dev.activenetwork.com:1433;databaseName=agency_service
spring.datasource.secondary.username=fnd_dev_usr
spring.datasource.secondary.password=fnd_dev_usr$2008
spring.datasource.secondary.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver


# SQL Server 链接配置
#spring.datasource.url=jdbc:sqlserver://SQLDEVAW01.dev.activenetwork.com:1433;databaseName=agency_service
#spring.datasource.username=fnd_dev_usr
#spring.datasource.password=fnd_dev_usr$2008
#spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver

# Mysql 链接配置
#spring.datasource.url=jdbc:mysql://localhost:3306/test
#spring.datasource.username=dbuser
#spring.datasource.password=dbpass
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver

# JNDI 链接配置
#spring.datasource.jndi-name=java:jboss/datasources/customers

# 激活 spring.profiles.active 会使用对应配置文件 application-XXX.properties
# 使用方式是 application.properties 与 application-XXX.properties 中相同的配置会使用 application-XXX.properties 覆盖。
# application.properties 中有的配置，而 application-XXX.properties 中没有的，会使用 application.properties 中的。
# application.properties 中没有的配置，而 application-XXX.properties 中有的，会使用 application-XXX.properties 中的。
# spring.profiles.active=prod


#===========================================Config for Thymeleaf templates===========================================
# Enable template caching.
spring.thymeleaf.cache=true
# Check that the templates location exists.
spring.thymeleaf.check-template-location=true
# Content-Type value.
spring.thymeleaf.content-type=text/html
# Enable MVC Thymeleaf view resolution
spring.thymeleaf.enabled=true
# Template encoding
spring.thymeleaf.encoding=UTF-8
# Comma-separated list of view names that should be excluded from resolution.
# spring.thymeleaf.excluded-view-names= 
# Template mode to be applied to templates. See also StandardTemplateModeHandlers.
spring.thymeleaf.mode=HTML5
# Prefix that gets prepended to view names when building a URL.
spring.thymeleaf.prefix=classpath:/templates/
# Suffix that gets appended to view names when building a URL.
spring.thymeleaf.suffix=.html
# Order of the template resolver in the chain.
#spring.thymeleaf.template-resolver-order= 
# Comma-separated list of view names that can be resolved.
#spring.thymeleaf.view-names= 
